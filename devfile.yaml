schemaVersion: 2.2.0
attributes:
  controller.devfile.io/storage-type: per-workspace
metadata:
  name: todo-app

components:
  - name: dev-tools
    container:
      image: registry.redhat.io/ubi8/nodejs-18:latest
      mountSources: true
      sourceMapping: /projects
      memoryRequest: 512Mi
      memoryLimit: 2Gi
      cpuRequest: 100m
      cpuLimit: 1000m
      endpoints:
        - name: web
          targetPort: 3000
          protocol: http
          exposure: public
      env:
        - name: DATABASE_URL
          value: postgres://postgres:password@postgres:5432/todoapp
        - name: NODE_ENV
          value: development
        - name: POSTGRES_HOST
          value: postgres
        - name: POSTGRES_DB
          value: todoapp
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: password
        - name: HOME
          value: /projects/home
      volumeMounts:
        - name: npm-cache
          path: /opt/app-root/src/.npm

  - name: prep-workspace
    container:
      image: registry.redhat.io/ubi8/ubi-minimal:latest
      mountSources: true
      sourceMapping: /projects
      memoryRequest: 128Mi
      memoryLimit: 256Mi
      cpuRequest: 10m
      cpuLimit: 200m
      command:
        - /bin/bash
      args:
        - '-c'
        - >-
          mkdir -p /projects/home /projects/bin && 
          echo "Workspace prepared successfully"
      env:
        - name: HOME
          value: /projects/home

  - name: postgres
    container:
      image: quay.io/sclorg/postgresql-15-c9s:c9s
      memoryRequest: 256Mi
      memoryLimit: 1Gi
      cpuRequest: 50m
      cpuLimit: 500m
      mountSources: true
      sourceMapping: /projects
      env:
        - name: POSTGRESQL_DATABASE
          value: todoapp
        - name: POSTGRESQL_USER
          value: postgres
        - name: POSTGRESQL_PASSWORD
          value: password
      endpoints:
        - name: database
          targetPort: 5432
          protocol: tcp
          exposure: internal
      volumeMounts:
        - name: postgres-data
          path: /var/lib/pgsql/data

  - name: postgres-data
    volume:
      size: 1Gi

  - name: npm-cache
    volume:
      size: 512Mi

commands:
  - id: prep-workspace
    apply:
      component: prep-workspace
      label: Prepare workspace

  - id: install-deps
    exec:
      component: dev-tools
      commandLine: npm install
      workingDir: /projects
      group:
        kind: build
        isDefault: true

  - id: start-dev
    exec:
      component: dev-tools
      commandLine: npm run dev
      workingDir: /projects
      group:
        kind: run
        isDefault: true

  - id: init-db
    exec:
      component: dev-tools
      commandLine: node init-db.js
      workingDir: /projects

events:
  preStart:
    - prep-workspace 